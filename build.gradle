/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'application'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'


//mainClassName = "com.gif.TopServlet"
//applicationName = "app"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()

}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'javax:javaee-api:7.0'
    compile 'org.glassfish.jersey.core:jersey-server:2.13'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.13'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'commons-io:commons-io:2.5'
    providedCompile 'javax.servlet:jstl:1.2'
    compile 'taglibs:standard:1.1.2'

//    compile 'org.eclipse.jetty:jetty-server:9.2.5.v20141112'
//   compile 'org.eclipse.jetty:jetty-webapp:9.2.5.v20141112' 
//    compile 'org.eclipse.jetty:jetty-annotations:9.1.4.v20140401'  
    compile 'com.github.jsimone:webapp-runner:8.5.11.3'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
//task stage (dependsOn : ['clean', 'installDist'])

task stage() {
    dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)


task wrapper(type: Wrapper) {

    gradleVersion = '2.1'
}
